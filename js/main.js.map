{"version":3,"file":"main.js","mappings":"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e;;AAEI;;;;;;;;;;;;;;;;;ACpCC;AACN;;AAEtC;AACA;;AAEA,oCAAoC,cAAc;AAClD,8BAA8B,wDAAW;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAEiC;;;;;;;;;;;;;;;ACnFtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmC;;;;;;;;;;;;;;;;;;;;;;;;ACnCU;AACS;AACS;AACnB;AACoB;AACoB;AAC9C;AACQ;AACd;;AAEhC,wEAAwE,cAAc;AACtF;AACA;AACA;AACA;;AAEA,gBAAgB,cAAc;;AAE9B;AACA,4BAA4B,wDAAW,0FAA0F,6EAA8B,WAAW,mEAAoB;AAC9L,kBAAkB,8DAAU;AAC5B;AACA;AACA;AACA;AACA,uBAAuB,yDAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAK,wCAAwC,+DAAW;AAClF;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,mCAAmC,uDAAK,iBAAiB,8DAAU;AACnE;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+HAA+H;AAC/H;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,wDAAwD,cAAc;AACtE;AACA;AACA;AACA;AACA,MAAM,QAAQ;;AAEd;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6FAA6F,qDAAS;AACtG;;AAEA;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,kGAAkG,qDAAS;AAC3G;AACA,4BAA4B,qDAAS,0DAA0D,qDAAS;AACxG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE2B;;;;;;;;;;;;;;;;AC7VM;;AAEtC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uDAAK;;AAE6B;;;;;;;;;;;;;;;;AChDK;;AAEvC;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uHAAuH;AACvH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,gDAAS;;AAElE;AACA;AACA;AACA,wDAAwD,gDAAS,SAAS,gDAAS;AACnF;AACA;;AAEoC;;;;;;;;;;;;;;;;AC5EJ;;AAEhC;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAK;;AAE+B;;;;;;;;;;;;;;;AC9CpC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE4C;;;;;;;;;;;;;;;ACtD5C;AACA;AACA;AACA;AACA;;AAE4B;;;;;;;;;;;;;;;;;;;;;ACN5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAE6F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFlC;AACtB;AACuE;AACpB;AACX;AACT;AACA;AACR;AACP;AACI;AACM;AACN;AACkB;AACV;AACJ;AACE;AACuB;AACG;AACA;AAC1B;AACJ;AACE;AACD;AAC1B;AACG;AACM;AACP;;AAEpC;AACA,qBAAqB,uDAAK;AAC1B,EAAE;;AAE0B;;;;;;;;;;;;;;;;;;;AChC0B;AACiB;AACgB;AACjD;;AAEtC;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wEAAqB;AACpC;;AAEA;AACA;AACA,QAAQ,wDAAQ,mBAAmB,wEAAqB;AACxD;AACA;;AAEA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA,eAAe,+DAAa;AAC5B;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAa;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,+DAAa;AAC5B;;AAEA;AACA;AACA,eAAe,+DAAa;AAC5B;;AAEA;AACA;AACA,SAAS,wDAAQ;AACjB,sBAAsB,wDAAQ,aAAa,wEAAqB;AAChE;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,+DAAa;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,+DAAa;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8DAAc;AACtC;AACA;AACA,OAAO;AACP;AACA;AACA,wBAAwB,+DAAa;;AAErC;AACA,4BAA4B,qDAAS;AACrC,oGAAoG,qDAAS;;AAE7G;AACA;AACA;AACA;AACA,2CAA2C,qDAAS;AACpD,8BAA8B,qDAAS;AACvC;AACA;AACA,gCAAgC,+DAAa;AAC7C;AACA,WAAW;AACX;AACA,QAAQ,6BAA6B,qDAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8DAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAEwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACraY;AACJ;AACC;AACM;AACT;AAChB;AACyB;AACtB;AACmB;AACZ;AACU;AACA;AAClB;;AAErB,0BAA0B,EAAE,GAAG,EAAE;;AAEjC;;AAEA;AACA,yBAAyB,mDAAa;AACtC;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,YAAY,wDAAQ;AACpB;AACA;;AAEA,0CAA0C,yBAAyB;;AAEnE;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAQ;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iDAAW;AACrB;AACA;AACA;AACA,GAAG;AACH;AACA,UAAU,iDAAW;AACrB;AACA;AACA;AACA,GAAG;AACH;AACA,UAAU,iDAAW;AACrB;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,mDAAa;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE4B;;;;;;;;;;;;;;;;;;;;;ACnJ4B;AACP;AACG;AAC1B;AACO;AACM;;AAE5C;AACA,4BAA4B,gDAAM;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,EAAE,0DAAa;AACzB,uBAAuB,uDAAU;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;AAEP,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,aAAa,8DAAc;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,aAAa,cAAc;AAC3B;AACA,KAAK,gDAAM;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,yGAAyG,qDAAS;AAClH;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uHAAuH,qDAAS;AAChI;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpVK;AACH;AACgB;AACT;AAC0B;AACpD;AACG;AACmB;AACZ;AACU;AACA;AAClB;;AAErB;AACA,yBAAyB,mDAAa;AACtC;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,qDAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wEAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+DAAa;AACnD,wDAAwD,qDAAS;AACjE;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,mDAAa;AAClB;AACA;AACA,uDAAK;;AAE4B;;;;;;;;;;;;;;;;;;;ACvG2B;AACtB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC,uDAAK;AAC1C,MAAM,wDAAQ,eAAe,uDAAK;AAClC,4BAA4B,uDAAK;AACjC,8BAA8B,uDAAK;AACnC,oDAAoD,uDAAK;AACzD,MAAM,uDAAK,qCAAqC,uDAAK;AACrD,MAAM,uDAAK,2BAA2B,uDAAK;AAC3C,uCAAuC,uDAAK;AAC5C,iDAAiD;AACjD,SAAS,uDAAK;AACd;AACA;AACA;AACA,MAAM,uDAAK;AACX,kCAAkC,uDAAK;AACvC;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,MAAM,kBAAkB,uDAAK;AAC7B;AACA,MAAM,EAAE,wDAAQ,+BAA+B,uDAAK;AACpD;AACA;AACA;AACA,WAAW,oDAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,wDAAQ;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA,MAAM,uDAAK,2BAA2B,uDAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAEwD;;;;;;;;;;;;;;;;;;;;ACxH9B;AACO;AACH;AACS;AAClB;;AAE1B;AACA,6BAA6B,gDAAM;AACnC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uDAAK;;AAEgC;;;;;;;;;;;;;;;;;;;;AC9BsB;AACL;AACvB;AACO;AACM;;AAE5C;AACA;AACA,2BAA2B,gDAAM;AACjC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4DAAY,oBAAoB,qBAAqB;AACzF;AACA,kEAAkE,wDAAY;AAC9E,gDAAgD,4DAAY;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+DAAa;AACvC,MAAM;AACN,0BAA0B,+DAAa;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA;AACA;AACA;AACA,iHAAiH,qDAAS;AAC1H;AACA;AACA;AACA;AACA;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAM;AACtC;AACA,KAAK,gDAAM;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,uDAAK;;AAE8B;;;;;;;;;;;;;;;;;;;;;;;;;;ACzTmB;AAChB;AACO;AACd;AAC0B;AACO;AAChB;AACmB;AACA;AAC9C;AACuB;;AAE5C;AACA,4BAA4B,gDAAM;AAClC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,EAAE,oEAAsB;AAC3D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,EAAE,0DAAa,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uDAAK,qCAAqC,uDAAU;AACvG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oEAAsB;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,0DAAa;AACxB;AACA,OAAO,QAAQ,oEAAsB;AACrC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;;AAEA;AACA;AACA,mCAAmC,0BAA0B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA,0CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sEAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA,gCAAgC,sEAAiB;AACjD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wBAAwB;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAkB,qDAAS;AAC3B;AACA;AACA,uBAAuB,0DAAa;AACpC,sBAAsB,qDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,qDAAS,uBAAuB,qDAAS;AAC/D;AACA,wBAAwB,qDAAS;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,qDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAS,wBAAwB,qDAAS;AAChE;AACA;AACA;AACA;AACA,wBAAwB,qDAAS;;AAEjC;AACA;AACA;AACA;AACA;AACA,6CAA6C,qDAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK,gDAAM;AACX;AACA;AACA;AACA;AACA;AACA,gCAAgC,oEAAsB;AACtD,gCAAgC,oEAAsB;AACtD,uDAAK;;AAE+B;;;;;;;;;;;;;;;;;;;AC/cqB;AACV;AAC2B;AACjC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAQ,kBAAkB,wEAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wEAAqB;AAClD;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uDAAK;AACjC,uBAAuB,wEAAqB;AAC5C;AACA;AACA,wBAAwB,+DAAa;AACrC,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,uEAAuE,wEAAqB;AAC5F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEwC;;;;;;;;;;;;;;;;AC7JQ;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yCAAyC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qDAAS;AACrE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qDAAS;AACrE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4DAA4D,qDAAS;AACrE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4DAA4D,qDAAS;AACrE;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,qDAAS;AACrE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,qDAAS;AACrE;AACA,KAAK;AACL;AACA;;AAEoC;;;;;;;;;;;;;;;;;;;AClIqB;AACC;AACgB;AAC5C;;AAE9B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA,kBAAkB,qDAAS;AAC3B;AACA;AACA;AACA;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+DAAa;AAC/C;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA,eAAe,wEAAqB;AACpC;AACA;AACA,QAAQ,wDAAQ,mBAAmB,wEAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE6C;;;;;;;;;;;;;;;;;;;ACvJN;AACkB;AACT;AAClB;;AAE9B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,kBAAkB,uDAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+DAAa;AAC/C;AACA;AACA;AACA;AACA,oBAAoB,+DAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,+DAAa;AAClE;AACA,eAAe,+DAAa;AAC5B;AACA,KAAK;AACL;AACA;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAS;AAC3B;AACA;AACA;AACA;AACA;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA,WAAW,qDAAS;AACpB,WAAW,qDAAS;AACpB;AACA,WAAW,qDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE6C;;;;;;;;;;;;;;;;;;;;AC1LP;AACA;AACZ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uDAAU;AAC3B;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,uDAAK;AACL,uDAAK;AACL,uDAAK;;AAEkC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCe;AAChB;AACG;AACf;AACP;AACyB;AACtB;AACmB;AACZ;AACU;AACA;AAClB;;AAErB;AACA,0BAA0B,mDAAa;AACvC;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE6B;;;;;;;;;;;;;;;;;;;;ACvHH;AACO;AACH;AACS;AAClB;;AAE1B;AACA,2BAA2B,gDAAM;AACjC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE8B;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BmB;AAChB;AACmB;AAChB;AACf;AACP;AACyB;AACH;AACZ;AACU;AACA;AAClB;;AAErB;AACA,0BAA0B,mDAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,EAAE,0DAAa,QAAQ;AAC7B,sCAAsC;AACtC,kBAAkB,uDAAU;AAC5B,uIAAuI;;AAEvI;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wBAAwB,uDAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAa;AACrC;AACA;AACA;AACA,kIAAkI;AAClI;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,+BAA+B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAK;;AAE6B;;;;;;;UCxIlC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN0B;AACA;;AAE1B;AACApC,mDAAG,CAAC,CAAC;;AAEL;;AAEA,MAAMmD,MAAM,GAAG9C,QAAQ,CAACW,gBAAgB,CAAC,eAAe,CAAC;AAEzDmC,MAAM,CAACvC,OAAO,CAACwC,IAAI,IAAI;EACnBA,IAAI,CAACN,gBAAgB,CAAC,OAAO,EAAGO,CAAC,IAAK;IAClCA,CAAC,CAACC,MAAM,CAACC,UAAU,CAACpB,SAAS,CAACqB,MAAM,CAAC,OAAO,CAAC;EACjD,CAAC,CAAC;EAEFJ,IAAI,CAACN,gBAAgB,CAAC,MAAM,EAAGO,CAAC,IAAK;IACjCA,CAAC,CAACC,MAAM,CAACC,UAAU,CAACpB,SAAS,CAACqB,MAAM,CAAC,OAAO,CAAC;EACjD,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;;AAEA,MAAMC,SAAS,GAAGpD,QAAQ,CAACW,gBAAgB,CAAC,iBAAiB,CAAC;AAE9D,SAAS0C,YAAYA,CAAA,EAAG;EACpB,IAAIrD,QAAQ,CAACsD,IAAI,CAACC,WAAW,GAAG,IAAI,EAA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","sources":["webpack://gulp-builder/./src/js/map.js","webpack://gulp-builder/./node_modules/imask/esm/controls/html-contenteditable-mask-element.js","webpack://gulp-builder/./node_modules/imask/esm/controls/html-input-mask-element.js","webpack://gulp-builder/./node_modules/imask/esm/controls/html-mask-element.js","webpack://gulp-builder/./node_modules/imask/esm/controls/input-history.js","webpack://gulp-builder/./node_modules/imask/esm/controls/input.js","webpack://gulp-builder/./node_modules/imask/esm/controls/mask-element.js","webpack://gulp-builder/./node_modules/imask/esm/core/action-details.js","webpack://gulp-builder/./node_modules/imask/esm/core/change-details.js","webpack://gulp-builder/./node_modules/imask/esm/core/continuous-tail-details.js","webpack://gulp-builder/./node_modules/imask/esm/core/holder.js","webpack://gulp-builder/./node_modules/imask/esm/core/utils.js","webpack://gulp-builder/./node_modules/imask/esm/index.js","webpack://gulp-builder/./node_modules/imask/esm/masked/base.js","webpack://gulp-builder/./node_modules/imask/esm/masked/date.js","webpack://gulp-builder/./node_modules/imask/esm/masked/dynamic.js","webpack://gulp-builder/./node_modules/imask/esm/masked/enum.js","webpack://gulp-builder/./node_modules/imask/esm/masked/factory.js","webpack://gulp-builder/./node_modules/imask/esm/masked/function.js","webpack://gulp-builder/./node_modules/imask/esm/masked/number.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pattern.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pattern/chunk-tail-details.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pattern/cursor.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pattern/fixed-definition.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pattern/input-definition.js","webpack://gulp-builder/./node_modules/imask/esm/masked/pipe.js","webpack://gulp-builder/./node_modules/imask/esm/masked/range.js","webpack://gulp-builder/./node_modules/imask/esm/masked/regexp.js","webpack://gulp-builder/./node_modules/imask/esm/masked/repeat.js","webpack://gulp-builder/webpack/bootstrap","webpack://gulp-builder/webpack/runtime/define property getters","webpack://gulp-builder/webpack/runtime/hasOwnProperty shorthand","webpack://gulp-builder/webpack/runtime/make namespace object","webpack://gulp-builder/./src/js/main.js"],"sourcesContent":["\r\nexport default function map() {\r\n    if (window.location.pathname === '/') {\r\n        loadMap();\r\n    }\r\n}\r\n\r\nfunction loadMap() {\r\n    let map = document.querySelector('.map1')\r\n    let mapDots = document.querySelector('.map-dots')\r\n    let coords = [\r\n        {\r\n            position: [53, 8],\r\n            text: 'г. Ростов-на-Дону',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [23, 15.5],\r\n            text: 'г. Санкт-Петербург',\r\n            size: 15,\r\n        },\r\n        {\r\n            position: [71, 48.5],\r\n            text: 'г. Красноярск',\r\n            size: 15,\r\n        },\r\n        {\r\n            position: [34, 13],\r\n            text: 'г. Москва',\r\n            size: 20,\r\n        },\r\n        {\r\n            position: [80, 41.5],\r\n            text: 'г. Барнаул',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [75, 41],\r\n            text: 'г. Новосибирск',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [35.5, 22],\r\n            text: 'г. Нижний Новгород',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [71, 34.5],\r\n            text: 'г. Омск',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [57, 28],\r\n            text: 'г. Екатеринбург',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [54, 18],\r\n            text: 'г. Самара',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [75, 43.5],\r\n            text: 'г. Кемерово',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [61, 5],\r\n            text: 'г. Краснодар',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [80, 47.5],\r\n            text: 'г. Абакан',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [71, 50],\r\n            text: 'г. Железногорск',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [67, 48],\r\n            text: 'г. Ачинск',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [72, 51.5],\r\n            text: 'г. Канск',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [77, 48.5],\r\n            text: 'г. Минусинск',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [75, 50],\r\n            text: 'г. Бородино',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [73, 50.3],\r\n            text: 'г. Зеленогорск',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [68, 50],\r\n            text: 'с. Богучаны',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [73.5, 47.5],\r\n            text: 'г. Ужур',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [72, 46.5],\r\n            text: 'г. Шарыпово',\r\n            size: 12,\r\n        },\r\n        {\r\n            position: [69, 47.5],\r\n            text: 'г. Назарово',\r\n            size: 12,\r\n        },\r\n    ]\r\n\r\n    coords.forEach(dot => {\r\n        mapDots.insertAdjacentHTML(\r\n            'beforeend',\r\n            `<div class=\"dot-wrapper position-absolute\">\r\n                <div class=\"personal-dot\">\r\n                    <span class=\"dot position-absolute rounded-circle\"></span>\r\n                    <span class=\"dot-border position-absolute rounded-circle\"></span>\r\n                </div>\r\n                <p class=\"dot-text position-absolute c-white p-3 rounded-3 text-center shadow-xl\"></p>\r\n            </div>`\r\n        )\r\n\r\n        let lastElem =\r\n            mapDots.querySelectorAll('.dot-wrapper')[\r\n            mapDots.querySelectorAll('.dot-wrapper').length - 1\r\n            ]\r\n\r\n        lastElem.style.top = dot.position[0] + '%'\r\n        lastElem.style.left = dot.position[1] + '%'\r\n        lastElem.dataset.text = dot.text\r\n\r\n        let personalDot = lastElem.querySelector('.personal-dot')\r\n\r\n        personalDot.style.width = dot.size * 2 + 'px'\r\n        personalDot.style.height = dot.size * 2 + 'px'\r\n\r\n        let dotText = lastElem.querySelector('.dot-text')\r\n\r\n        dotText.innerHTML = dot.text\r\n        dotText.style.bottom = '50%'\r\n        dotText.style.left = '30%'\r\n\r\n        let mainDot = personalDot.querySelector('.dot')\r\n\r\n        mainDot.style.width = dot.size + 'px'\r\n        mainDot.style.height = dot.size + 'px'\r\n\r\n        let mainDotBorder = personalDot.querySelector('.dot-border')\r\n\r\n        mainDotBorder.style.width = dot.size * 2 + 'px'\r\n        mainDotBorder.style.height = dot.size * 2 + 'px'\r\n        mainDotBorder.style.left = '25%'\r\n        mainDotBorder.style.top = '25%'\r\n    })\r\n\r\n    let i = 0\r\n\r\n    let interval = setInterval(el => {\r\n        mapDots.querySelectorAll('.dot-wrapper').forEach(elem => {\r\n            elem.querySelector('.dot-text').classList.remove('active')\r\n        })\r\n\r\n        if (mapDots.querySelectorAll('.dot-wrapper')[i]) {\r\n            let elem = mapDots.querySelectorAll('.dot-wrapper')[i]\r\n            let dotBorder = elem.querySelector('.dot-border')\r\n            let dotText = elem.querySelector('.dot-text')\r\n\r\n            dotText.innerHTML = dotBorder.parentElement.parentElement.dataset.text\r\n            dotText.classList.add('active')\r\n            dotText.style.bottom = '50%'\r\n            dotText.style.left = '30%'\r\n\r\n            dotBorder.style.animation = 'pulse-red 2s ease'\r\n            i++\r\n\r\n            if (i > 0) {\r\n                mapDots.querySelectorAll('.dot-wrapper').forEach((elem1, idx) => {\r\n                    if (idx === i - 2) {\r\n                        let dotBorder1 = elem1.querySelector('.dot-border')\r\n                        dotBorder1.style.animation = 'none'\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            mapDots\r\n                .querySelectorAll('.dot-wrapper')\r\n            [mapDots.querySelectorAll('.dot-wrapper').length - 1].querySelector(\r\n                '.dot-border'\r\n            ).style.animation = 'none'\r\n\r\n            i = 0\r\n\r\n            let elem = mapDots.querySelectorAll('.dot-wrapper')[i]\r\n            let dotBorder = elem.querySelector('.dot-border')\r\n            let dotText = elem.querySelector('.dot-text')\r\n\r\n            dotText.innerHTML = dotBorder.parentElement.parentElement.dataset.text\r\n            dotText.classList.add('active')\r\n            dotText.style.bottom = '50%'\r\n            dotText.style.left = '30%'\r\n\r\n            dotBorder.style.animation = 'pulse-red 2s ease'\r\n            i++\r\n        }\r\n    }, 2000)\r\n\r\n    let dotWrapper = mapDots.querySelectorAll('.dot-wrapper')\r\n\r\n    dotWrapper.forEach(wrap => {\r\n        wrap.querySelector('.dot').addEventListener('mouseenter', () => {\r\n            mapDots.querySelectorAll('.dot-wrapper').forEach(elem => {\r\n                elem.querySelector('.dot-text').classList.remove('active')\r\n            })\r\n\r\n            wrap.querySelector('.dot-text').classList.add('active')\r\n\r\n            clearInterval(interval)\r\n        })\r\n\r\n        wrap.querySelector('.dot').addEventListener('mouseleave', () => {\r\n            mapDots.querySelectorAll('.dot-wrapper').forEach(elem => {\r\n                elem.querySelector('.dot-text').classList.remove('active')\r\n            })\r\n\r\n            interval = setInterval(el => {\r\n                mapDots.querySelectorAll('.dot-wrapper').forEach(elem => {\r\n                    elem.querySelector('.dot-text').classList.remove('active')\r\n                })\r\n\r\n                if (mapDots.querySelectorAll('.dot-wrapper')[i]) {\r\n                    let elem = mapDots.querySelectorAll('.dot-wrapper')[i]\r\n                    let dotBorder = elem.querySelector('.dot-border')\r\n                    let dotText = elem.querySelector('.dot-text')\r\n\r\n                    dotText.innerHTML = dotBorder.parentElement.parentElement.dataset.text\r\n                    dotText.classList.add('active')\r\n                    dotText.style.bottom = '50%'\r\n                    dotText.style.left = '30%'\r\n\r\n                    dotBorder.style.animation = 'pulse-red 2s ease'\r\n                    i++\r\n\r\n                    if (i > 0) {\r\n                        mapDots.querySelectorAll('.dot-wrapper').forEach((elem1, idx) => {\r\n                            if (idx === i - 2) {\r\n                                let dotBorder1 = elem1.querySelector('.dot-border')\r\n                                dotBorder1.style.animation = 'none'\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    mapDots\r\n                        .querySelectorAll('.dot-wrapper')\r\n                    [mapDots.querySelectorAll('.dot-wrapper').length - 1].querySelector(\r\n                        '.dot-border'\r\n                    ).style.animation = 'none'\r\n\r\n                    i = 0\r\n\r\n                    let elem = mapDots.querySelectorAll('.dot-wrapper')[i]\r\n                    let dotBorder = elem.querySelector('.dot-border')\r\n                    let dotText = elem.querySelector('.dot-text')\r\n\r\n                    dotText.innerHTML = dotBorder.parentElement.parentElement.dataset.text\r\n                    dotText.classList.add('active')\r\n                    dotText.style.bottom = '50%'\r\n                    dotText.style.left = '30%'\r\n\r\n                    dotBorder.style.animation = 'pulse-red 2s ease'\r\n                    i++\r\n                }\r\n            }, 2000)\r\n        })\r\n\r\n        wrap.querySelector('.dot-text').addEventListener('mouseenter', () => {\r\n            mapDots.querySelectorAll('.dot-wrapper').forEach(elem => {\r\n                elem.querySelector('.dot-text').classList.remove('active')\r\n            })\r\n\r\n            wrap.querySelector('.dot-text').classList.add('active')\r\n\r\n            clearInterval(interval)\r\n        })\r\n\r\n        wrap.querySelector('.dot-text').addEventListener('mouseleave', () => {\r\n            mapDots.querySelectorAll('.dot-wrapper').forEach(elem => {\r\n                elem.querySelector('.dot-text').classList.remove('active')\r\n            })\r\n\r\n            interval = setInterval(el => {\r\n                mapDots.querySelectorAll('.dot-wrapper').forEach(elem => {\r\n                    elem.querySelector('.dot-text').classList.remove('active')\r\n                })\r\n\r\n                if (mapDots.querySelectorAll('.dot-wrapper')[i]) {\r\n                    let elem = mapDots.querySelectorAll('.dot-wrapper')[i]\r\n                    let dotBorder = elem.querySelector('.dot-border')\r\n                    let dotText = elem.querySelector('.dot-text')\r\n\r\n                    dotText.innerHTML = dotBorder.parentElement.parentElement.dataset.text\r\n                    dotText.classList.add('active')\r\n                    dotText.style.bottom = '50%'\r\n                    dotText.style.left = '30%'\r\n\r\n                    dotBorder.style.animation = 'pulse-red 2s ease'\r\n                    i++\r\n\r\n                    if (i > 0) {\r\n                        mapDots.querySelectorAll('.dot-wrapper').forEach((elem1, idx) => {\r\n                            if (idx === i - 2) {\r\n                                let dotBorder1 = elem1.querySelector('.dot-border')\r\n                                dotBorder1.style.animation = 'none'\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    mapDots\r\n                        .querySelectorAll('.dot-wrapper')\r\n                    [mapDots.querySelectorAll('.dot-wrapper').length - 1].querySelector(\r\n                        '.dot-border'\r\n                    ).style.animation = 'none'\r\n\r\n                    i = 0\r\n\r\n                    let elem = mapDots.querySelectorAll('.dot-wrapper')[i]\r\n                    let dotBorder = elem.querySelector('.dot-border')\r\n                    let dotText = elem.querySelector('.dot-text')\r\n\r\n                    dotText.innerHTML = dotBorder.parentElement.parentElement.dataset.text\r\n                    dotText.classList.add('active')\r\n                    dotText.style.bottom = '50%'\r\n                    dotText.style.left = '30%'\r\n\r\n                    dotBorder.style.animation = 'pulse-red 2s ease'\r\n                    i++\r\n                }\r\n            }, 2000)\r\n        })\r\n    })\r\n\r\n    // для планшетов\r\n    map.addEventListener('click', () => {\r\n        mapDots.querySelectorAll('.dot-border').forEach((dot, idx) => {\r\n            if (dot.style.animation === 'none' || !dot.style.animation) {\r\n                dot.style.animation = 'pulse-red 2s infinite'\r\n                dot.style.animationDelay = coords[idx].delay + 's'\r\n            } else {\r\n                dot.style.animation = 'none'\r\n            }\r\n        })\r\n    })\r\n\r\n    mapDots.querySelectorAll('.dot').forEach(dot => {\r\n        dot.addEventListener('mouseenter', () => {\r\n            dot.parentElement.parentElement.querySelector('.dot-text').innerHTML =\r\n                dot.parentElement.parentElement.dataset.text\r\n            dot.parentElement.parentElement.querySelector('.dot-text').classList.add('active')\r\n        })\r\n\r\n        dot.addEventListener('mouseleave', () => {\r\n            dot.parentElement.parentElement.querySelector('.dot-text').innerHTML =\r\n                dot.parentElement.parentElement.dataset.text\r\n            dot.parentElement.parentElement.querySelector('.dot-text').classList.remove('active')\r\n        })\r\n    })\r\n}","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /** Returns HTMLElement selection start */\n  get _unsafeSelectionStart() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  get _unsafeSelectionEnd() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  _unsafeSelect(start, end) {\n    if (!this.rootElement.createRange) return;\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  get value() {\n    return this.input.textContent || '';\n  }\n  set value(value) {\n    this.input.textContent = value;\n  }\n}\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\nexport { HTMLContenteditableMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLInputMaskElement as default };\n","import MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\nconst KEY_Z = 90;\nconst KEY_Y = 89;\n\n/** Bridge between HTMLElement and {@link Masked} */\nclass HTMLMaskElement extends MaskElement {\n  /** HTMLElement to use mask on */\n\n  constructor(input) {\n    super();\n    this.input = input;\n    this._onKeydown = this._onKeydown.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onBeforeinput = this._onBeforeinput.bind(this);\n    this._onCompositionEnd = this._onCompositionEnd.bind(this);\n  }\n  get rootElement() {\n    var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n    return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) == null ? void 0 : _this$input$getRootNo2.call(_this$input)) != null ? _this$input$getRootNo : document;\n  }\n\n  /** Is element in focus */\n  get isActive() {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /** Binds HTMLElement events to mask internal events */\n  bindEvents(handlers) {\n    this.input.addEventListener('keydown', this._onKeydown);\n    this.input.addEventListener('input', this._onInput);\n    this.input.addEventListener('beforeinput', this._onBeforeinput);\n    this.input.addEventListener('compositionend', this._onCompositionEnd);\n    this.input.addEventListener('drop', handlers.drop);\n    this.input.addEventListener('click', handlers.click);\n    this.input.addEventListener('focus', handlers.focus);\n    this.input.addEventListener('blur', handlers.commit);\n    this._handlers = handlers;\n  }\n  _onKeydown(e) {\n    if (this._handlers.redo && (e.keyCode === KEY_Z && e.shiftKey && (e.metaKey || e.ctrlKey) || e.keyCode === KEY_Y && e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n    if (this._handlers.undo && e.keyCode === KEY_Z && (e.metaKey || e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (!e.isComposing) this._handlers.selectionChange(e);\n  }\n  _onBeforeinput(e) {\n    if (e.inputType === 'historyUndo' && this._handlers.undo) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (e.inputType === 'historyRedo' && this._handlers.redo) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n  }\n  _onCompositionEnd(e) {\n    this._handlers.input(e);\n  }\n  _onInput(e) {\n    if (!e.isComposing) this._handlers.input(e);\n  }\n\n  /** Unbinds HTMLElement events to mask internal events */\n  unbindEvents() {\n    this.input.removeEventListener('keydown', this._onKeydown);\n    this.input.removeEventListener('input', this._onInput);\n    this.input.removeEventListener('beforeinput', this._onBeforeinput);\n    this.input.removeEventListener('compositionend', this._onCompositionEnd);\n    this.input.removeEventListener('drop', this._handlers.drop);\n    this.input.removeEventListener('click', this._handlers.click);\n    this.input.removeEventListener('focus', this._handlers.focus);\n    this.input.removeEventListener('blur', this._handlers.commit);\n    this._handlers = {};\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n","class InputHistory {\n  constructor() {\n    this.states = [];\n    this.currentIndex = 0;\n  }\n  get currentState() {\n    return this.states[this.currentIndex];\n  }\n  get isEmpty() {\n    return this.states.length === 0;\n  }\n  push(state) {\n    // if current index points before the last element then remove the future\n    if (this.currentIndex < this.states.length - 1) this.states.length = this.currentIndex + 1;\n    this.states.push(state);\n    if (this.states.length > InputHistory.MAX_LENGTH) this.states.shift();\n    this.currentIndex = this.states.length - 1;\n  }\n  go(steps) {\n    this.currentIndex = Math.min(Math.max(this.currentIndex + steps, 0), this.states.length - 1);\n    return this.currentState;\n  }\n  undo() {\n    return this.go(-1);\n  }\n  redo() {\n    return this.go(+1);\n  }\n  clear() {\n    this.states.length = 0;\n    this.currentIndex = 0;\n  }\n}\nInputHistory.MAX_LENGTH = 100;\n\nexport { InputHistory as default };\n","import { DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLInputMaskElement from './html-input-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport InputHistory from './input-history.js';\nimport './html-mask-element.js';\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n  */\n\n  /** Internal {@link Masked} model */\n\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLInputMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._rawInputValue = '';\n    this.history = new InputHistory();\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onUndo = this._onUndo.bind(this);\n    this._onRedo = this._onRedo.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) == null ? void 0 : _this$masked.maskEquals(mask));\n  }\n\n  /** Masked */\n  get mask() {\n    return this.masked.mask;\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = mask instanceof IMask.Masked ? mask : createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl('auto');\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl('auto');\n  }\n\n  /** Raw input value */\n  get rawInputValue() {\n    return this._rawInputValue;\n  }\n  set rawInputValue(str) {\n    if (this.rawInputValue === str) return;\n    this.masked.rawInputValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl('auto');\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n      undo: this._onUndo,\n      redo: this._onRedo\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent(ev, e) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n    this._unmaskedValue = this.masked.unmaskedValue;\n    this._rawInputValue = this.masked.rawInputValue;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl(cursorPos) {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newRawInputValue = this.masked.rawInputValue;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue || this._rawInputValue !== newRawInputValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    this._rawInputValue = newRawInputValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (cursorPos === 'auto') this.alignCursor();else if (cursorPos != null) this.cursorPos = cursorPos;\n    if (isChanged) this._fireChangeEvents();\n    if (!this._historyChanging && (isChanged || this.history.isEmpty)) this.history.push({\n      unmaskedValue: newUnmaskedValue,\n      selection: {\n        start: this.selectionStart,\n        end: this.cursorPos\n      }\n    });\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n      mask,\n      ...restOpts\n    } = opts; // TODO types, yes, mask is optional\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = this.masked.optionsIsChanged(restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts); // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection\n    });\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) this.updateValue();\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n  _onUndo() {\n    this._applyHistoryState(this.history.undo());\n  }\n  _onRedo() {\n    this._applyHistoryState(this.history.redo());\n  }\n  _applyHistoryState(state) {\n    if (!state) return;\n    this._historyChanging = true;\n    this.unmaskedValue = state.unmaskedValue;\n    this.el.select(state.selection.start, state.selection.end);\n    this._saveSelection();\n    this._historyChanging = false;\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    this._listeners.length = 0;\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n","import IMask from '../core/holder.js';\n\n/**  Generic element API to use with mask */\nclass MaskElement {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Safely returns selection start */\n  get selectionStart() {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n    return start != null ? start : this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd() {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n    return end != null ? end : this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select(start, end) {\n    if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive() {\n    return false;\n  }\n  /** */\n\n  /** */\n\n  /** */\n}\nIMask.MaskElement = MaskElement;\n\nexport { MaskElement as default };\n","import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n    if (this.insertedCount) {\n      // double check right part\n      while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n        if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n      }\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n","import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  /** Can skip chars */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      tailShift: 0,\n      skip: false\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.inserted += details.inserted;\n    this.rawInserted += details.rawInserted;\n    this.tailShift += details.tailShift;\n    this.skip = this.skip || details.skip;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n  get consumed() {\n    return Boolean(this.rawInserted) || this.skip;\n  }\n  equals(details) {\n    return this.inserted === details.inserted && this.tailShift === details.tailShift && this.rawInserted === details.rawInserted && this.skip === details.skip;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n","/** Provides details of continuous extracted tail */\nclass ContinuousTailDetails {\n  /** Tail value as string */\n\n  /** Tail start position */\n\n  /** Start position */\n\n  constructor(value, from, stop) {\n    if (value === void 0) {\n      value = '';\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n  toString() {\n    return this.value;\n  }\n  extend(tail) {\n    this.value += String(tail);\n  }\n  appendTo(masked) {\n    return masked.append(this.toString(), {\n      tail: true\n    }).aggregate(masked._appendPlaceholder());\n  }\n  get state() {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop\n    };\n  }\n  set state(state) {\n    Object.assign(this, state);\n  }\n  unshift(beforePos) {\n    if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n  shift() {\n    if (!this.value.length) return '';\n    const shiftChar = this.value[this.value.length - 1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n\nexport { ContinuousTailDetails as default };\n","/** Applies mask on element */\nfunction IMask(el, opts) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\nexport { IMask as default };\n","/** Checks if value is string */\nfunction isString(str) {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nfunction isObject(obj) {\n  var _obj$constructor;\n  return typeof obj === 'object' && obj != null && (obj == null || (_obj$constructor = obj.constructor) == null ? void 0 : _obj$constructor.name) === 'Object';\n}\nfunction pick(obj, keys) {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [k, v] = _ref;\n    if (keys(v, k)) acc[k] = v;\n    return acc;\n  }, {});\n}\n\n/** Direction */\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT'\n};\n\n/** Direction */\n\nfunction forceDirection(direction) {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nfunction escapeRegExp(str) {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nfunction objectIncludes(b, a) {\n  if (a === b) return true;\n  const arrA = Array.isArray(a),\n    arrB = Array.isArray(b);\n  let i;\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++) if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n  if (arrA != arrB) return false;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date,\n      dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n    const regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = 0; i < keys.length; i++) if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n    return a.toString() === b.toString();\n  }\n  return false;\n}\n\n/** Selection range */\n\nexport { DIRECTION, escapeRegExp, forceDirection, isObject, isString, objectIncludes, pick };\n","export { default as InputMask } from './controls/input.js';\nimport IMask from './core/holder.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { default as HTMLInputMaskElement } from './controls/html-input-mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as ChangeDetails } from './core/change-details.js';\nexport { DIRECTION, forceDirection } from './core/utils.js';\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as createMask, normalizeOpts } from './masked/factory.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as ChunksTailDetails } from './masked/pattern/chunk-tail-details.js';\nexport { default as PatternFixedDefinition } from './masked/pattern/fixed-definition.js';\nexport { default as PatternInputDefinition } from './masked/pattern/input-definition.js';\nexport { PIPE_TYPE, createPipe, pipe } from './masked/pipe.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as RepeatBlock } from './masked/repeat.js';\nimport './core/action-details.js';\nimport './controls/input-history.js';\nimport './core/continuous-tail-details.js';\nimport './masked/pattern/cursor.js';\n\ntry {\n  globalThis.IMask = IMask;\n} catch {}\n\nexport { IMask as default };\n","import ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { isString, DIRECTION, objectIncludes, forceDirection } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n/** Append flags */\n\n/** Extract flags */\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\n/** Provides common masking stuff */\nclass Masked {\n  /** */\n\n  /** */\n\n  /** Transforms value before mask processing */\n\n  /** Transforms each char before mask processing */\n\n  /** Validates if value is acceptable */\n\n  /** Does additional processing at the end of editing */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions(opts) {\n    if (!this.optionsIsChanged(opts)) return;\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update(opts) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset() {\n    this._value = '';\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.resolve(value, {\n      input: true\n    });\n  }\n\n  /** Resolve new value */\n  resolve(value, flags) {\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n  get unmaskedValue() {\n    return this.value;\n  }\n  set unmaskedValue(value) {\n    this.resolve(value, {});\n  }\n  get typedValue() {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue;\n  }\n  set typedValue(value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue() {\n    return this.extractInput(0, this.displayValue.length, {\n      raw: true\n    });\n  }\n  set rawInputValue(value) {\n    this.resolve(value, {\n      raw: true\n    });\n  }\n  get displayValue() {\n    return this.value;\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos(cursorPos, direction) {\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return Math.min(this.displayValue.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return this.displayValue.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw(ch, flags) {\n    if (!ch) return new ChangeDetails();\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch\n    });\n  }\n\n  /** Appends char */\n  _appendChar(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const consistentState = this.state;\n    let details;\n    [ch, details] = this.doPrepareChar(ch, flags);\n    if (ch) {\n      details = details.aggregate(this._appendCharRaw(ch, flags));\n\n      // TODO handle `skip`?\n\n      // try `autofix` lookahead\n      if (!details.rawInserted && this.autofix === 'pad') {\n        const noFixState = this.state;\n        this.state = consistentState;\n        let fixDetails = this.pad(flags);\n        const chDetails = this._appendCharRaw(ch, flags);\n        fixDetails = fixDetails.aggregate(chDetails);\n\n        // if fix was applied or\n        // if details are equal use skip restoring state optimization\n        if (chDetails.rawInserted || fixDetails.equals(details)) {\n          details = fixDetails;\n        } else {\n          this.state = noFixState;\n        }\n      }\n    }\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.unshift(this.displayValue.length - details.tailShift);\n          }\n        }\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted.length === checkTail.toString().length;\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.shift();\n          }\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted.length === checkTail.toString().length;\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder() {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager() {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append(str, flags, tail) {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags != null && flags.tail) flags._beforeTailState = this.state;\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n    for (let ci = 0; ci < str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n    if ((this.eager === true || this.eager === 'append') && flags != null && flags.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n    return details;\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    this._value = this.displayValue.slice(0, fromPos) + this.displayValue.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh(fn) {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n    const ret = fn();\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.displayValue.length), {}, '');\n      this.doCommit();\n    }\n    delete this._refreshing;\n    return ret;\n  }\n  runIsolated(fn) {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n    const ret = fn(this);\n    this.state = state;\n    delete this._isolated;\n    return ret;\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepare ? this.prepare(str, this, flags) : str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepareChar ? this.prepareChar(str, this, flags) : str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate(flags) {\n    return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit() {\n    if (this.commit) this.commit(this.value, this);\n  }\n  splice(start, deleteCount, inserted, removeDirection, flags) {\n    if (inserted === void 0) {\n      inserted = '';\n    }\n    if (removeDirection === void 0) {\n      removeDirection = DIRECTION.NONE;\n    }\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    const tailPos = start + deleteCount;\n    const tail = this.extractTail(tailPos);\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n    let oldRawValue;\n    if (eagerRemove) {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {\n        raw: true\n      });\n    }\n    let startChangePos = start;\n    const details = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !eagerRemove ? DIRECTION.NONE : removeDirection);\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n    details.aggregate(this.remove(startChangePos));\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.displayValue.length)) {\n          details.aggregate(new ChangeDetails({\n            tailShift: -1\n          })).aggregate(this.remove(valLength - 1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n  maskEquals(mask) {\n    return this.mask === mask;\n  }\n  optionsIsChanged(opts) {\n    return !objectIncludes(this, opts);\n  }\n  typedValueEquals(value) {\n    const tval = this.typedValue;\n    return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nMasked.DEFAULTS = {\n  skipInvalid: true\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\nIMask.Masked = Masked;\n\nexport { Masked as default };\n","import MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport { isString } from '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\nconst DefaultPattern = 'd{.}`m{.}`Y';\n\n// Make format and parse required when pattern is provided\n\n/** Date mask */\nclass MaskedDate extends MaskedPattern {\n  static extractPatternOptions(opts) {\n    const {\n      mask,\n      pattern,\n      ...patternOpts\n    } = opts;\n    return {\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern\n    };\n  }\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super(MaskedDate.extractPatternOptions({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    }));\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      mask,\n      pattern,\n      blocks,\n      ...patternOpts\n    } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    };\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks\n    });\n  }\n  doValidate(flags) {\n    const date = this.date;\n    return super.doValidate(flags) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist(str) {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date() {\n    return this.typedValue;\n  }\n  set date(date) {\n    this.typedValue = date;\n  }\n  get typedValue() {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue(value) {\n    super.typedValue = value;\n  }\n  maskEquals(mask) {\n    return mask === Date || super.maskEquals(mask);\n  }\n  optionsIsChanged(opts) {\n    return super.optionsIsChanged(MaskedDate.extractPatternOptions(opts));\n  }\n}\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999\n  }\n});\nMaskedDate.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  mask: Date,\n  pattern: DefaultPattern,\n  format: (date, masked) => {\n    if (!date) return '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return [day, month, year].join('.');\n  },\n  parse: (str, masked) => {\n    const [day, month, year] = str.split('.').map(Number);\n    return new Date(year, month - 1, day);\n  }\n};\nIMask.MaskedDate = MaskedDate;\n\nexport { MaskedDate as default };\n","import { DIRECTION, objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nclass MaskedDynamic extends Masked {\n  constructor(opts) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n    this.currentMask = undefined;\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    if ('mask' in opts) {\n      this.exposeMask = undefined;\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(m => {\n        const {\n          expose,\n          ...maskOpts\n        } = normalizeOpts(m);\n        const masked = createMask({\n          overwrite: this._overwrite,\n          eager: this._eager,\n          skipInvalid: this._skipInvalid,\n          ...maskOpts\n        });\n        if (expose) this.exposeMask = masked;\n        return masked;\n      }) : [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = this._applyDispatch(ch, flags);\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n    return details;\n  }\n  _applyDispatch(appended, flags, tail) {\n    if (appended === void 0) {\n      appended = '';\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._rawInputValue : inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n    const prevMaskState = prevMask == null ? void 0 : prevMask.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, {\n      ...flags\n    }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n        if (insertValue) {\n          this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = this.currentMask.value.length - prevValueBeforeTail.length;\n        }\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {\n            raw: true,\n            tail: true\n          }).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n    return details;\n  }\n  _appendPlaceholder() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n    return details;\n  }\n  _appendEager() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n    return details;\n  }\n  appendTail(tail) {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n    return details.aggregate(this.currentMask ? this.currentMask.appendTail(tail) : super.appendTail(tail));\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n    return {\n      ...flags,\n      _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n    };\n  }\n  doDispatch(appended, flags, tail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    return this.dispatch(appended, this, flags, tail);\n  }\n  doValidate(flags) {\n    return super.doValidate(flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n  }\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepare(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepareChar(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  reset() {\n    var _this$currentMask;\n    (_this$currentMask = this.currentMask) == null || _this$currentMask.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n  get value() {\n    return this.exposeMask ? this.exposeMask.value : this.currentMask ? this.currentMask.value : '';\n  }\n  set value(value) {\n    if (this.exposeMask) {\n      this.exposeMask.value = value;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.value = value;\n  }\n  get unmaskedValue() {\n    return this.exposeMask ? this.exposeMask.unmaskedValue : this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.unmaskedValue = unmaskedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.exposeMask ? this.exposeMask.typedValue : this.currentMask ? this.currentMask.typedValue : '';\n  }\n  set typedValue(typedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.typedValue = typedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n      return;\n    }\n    let unmaskedValue = String(typedValue);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = typedValue;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n  get displayValue() {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n  get isComplete() {\n    var _this$currentMask2;\n    return Boolean((_this$currentMask2 = this.currentMask) == null ? void 0 : _this$currentMask2.isComplete);\n  }\n  get isFilled() {\n    var _this$currentMask3;\n    return Boolean((_this$currentMask3 = this.currentMask) == null ? void 0 : _this$currentMask3.isFilled);\n  }\n  remove(fromPos, toPos) {\n    const details = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n      // update with dispatch\n      .aggregate(this._applyDispatch());\n    }\n    return details;\n  }\n  get state() {\n    var _this$currentMask4;\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: (_this$currentMask4 = this.currentMask) == null ? void 0 : _this$currentMask4.state\n    };\n  }\n  set state(state) {\n    const {\n      compiledMasks,\n      currentMaskRef,\n      currentMask,\n      ...maskedState\n    } = state;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n  extractInput(fromPos, toPos, flags) {\n    return this.currentMask ? this.currentMask.extractInput(fromPos, toPos, flags) : '';\n  }\n  extractTail(fromPos, toPos) {\n    return this.currentMask ? this.currentMask.extractTail(fromPos, toPos) : super.extractTail(fromPos, toPos);\n  }\n  doCommit() {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n  nearestInputPos(cursorPos, direction) {\n    return this.currentMask ? this.currentMask.nearestInputPos(cursorPos, direction) : super.nearestInputPos(cursorPos, direction);\n  }\n  get overwrite() {\n    return this.currentMask ? this.currentMask.overwrite : this._overwrite;\n  }\n  set overwrite(overwrite) {\n    this._overwrite = overwrite;\n  }\n  get eager() {\n    return this.currentMask ? this.currentMask.eager : this._eager;\n  }\n  set eager(eager) {\n    this._eager = eager;\n  }\n  get skipInvalid() {\n    return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;\n  }\n  set skipInvalid(skipInvalid) {\n    this._skipInvalid = skipInvalid;\n  }\n  get autofix() {\n    return this.currentMask ? this.currentMask.autofix : this._autofix;\n  }\n  set autofix(autofix) {\n    this._autofix = autofix;\n  }\n  maskEquals(mask) {\n    return Array.isArray(mask) ? this.compiledMasks.every((m, mi) => {\n      if (!mask[mi]) return;\n      const {\n        mask: oldMask,\n        ...restOpts\n      } = mask[mi];\n      return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n    }) : super.maskEquals(mask);\n  }\n  typedValueEquals(value) {\n    var _this$currentMask5;\n    return Boolean((_this$currentMask5 = this.currentMask) == null ? void 0 : _this$currentMask5.typedValueEquals(value));\n  }\n}\n/** Currently chosen mask */\n/** Currently chosen mask */\n/** Compliled {@link Masked} options */\n/** Chooses {@link Masked} depending on input value */\nMaskedDynamic.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.displayValue.length : m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT);\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, {\n          raw: true\n        });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(0, Math.max(startInputPos, m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT)))\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n","import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { DIRECTION } from '../core/utils.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport './base.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  constructor(opts) {\n    super({\n      ...MaskedEnum.DEFAULTS,\n      ...opts\n    }); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: enum_,\n      ...eopts\n    } = opts;\n    if (enum_) {\n      const lengths = enum_.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n      this.enum = enum_;\n    }\n    super._update(eopts);\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const matchFrom = Math.min(this.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    const matches = this.enum.filter(e => this.matchValue(e, this.unmaskedValue + ch, matchFrom));\n    if (matches.length) {\n      if (matches.length === 1) {\n        this._forEachBlocksInRange(0, this.value.length, (b, bi) => {\n          const mch = matches[0][bi];\n          if (bi >= this.value.length || mch === b.value) return;\n          b.reset();\n          b._appendChar(mch, flags);\n        });\n      }\n      const d = super._appendCharRaw(matches[0][this.value.length], flags);\n      if (matches.length === 1) {\n        matches[0].slice(this.unmaskedValue.length).split('').forEach(mch => d.aggregate(super._appendCharRaw(mch)));\n      }\n      return d;\n    }\n    return new ChangeDetails({\n      skip: !this.isComplete\n    });\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    // just drop tail\n    return new ContinuousTailDetails('', fromPos);\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (fromPos === toPos) return new ChangeDetails();\n    const matchFrom = Math.min(super.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    let pos;\n    for (pos = fromPos; pos >= 0; --pos) {\n      const matches = this.enum.filter(e => this.matchValue(e, this.value.slice(matchFrom, pos), matchFrom));\n      if (matches.length > 1) break;\n    }\n    const details = super.remove(pos, toPos);\n    details.tailShift += pos - fromPos;\n    return details;\n  }\n  get isComplete() {\n    return this.enum.indexOf(this.value) >= 0;\n  }\n}\n/** Match enum value */\nMaskedEnum.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  matchValue: (estr, istr, matchFrom) => estr.indexOf(istr, matchFrom) === matchFrom\n};\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n","import { isString, isObject, pick } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n/** Get Masked class by mask type */\nfunction maskedClass(mask) /* TODO */{\n  if (mask == null) throw new Error('mask property should be defined');\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  return IMask.Masked;\n}\nfunction normalizeOpts(opts) {\n  if (!opts) throw new Error('Options in not defined');\n  if (IMask.Masked) {\n    if (opts.prototype instanceof IMask.Masked) return {\n      mask: opts\n    };\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const {\n      mask = undefined,\n      ...instanceOpts\n    } = opts instanceof IMask.Masked ? {\n      mask: opts\n    } : isObject(opts) && opts.mask instanceof IMask.Masked ? opts : {};\n    if (mask) {\n      const _mask = mask.mask;\n      return {\n        ...pick(mask, (_, k) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts\n      };\n    }\n  }\n  if (!isObject(opts)) return {\n    mask: opts\n  };\n  return {\n    ...opts\n  };\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nfunction createMask(opts) {\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  const nOpts = normalizeOpts(opts);\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error(\"Masked class is not found for provided mask \" + nOpts.mask + \", appropriate module needs to be imported manually before creating mask.\");\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if (nOpts._mask) {\n    nOpts.mask = nOpts._mask;\n    delete nOpts._mask;\n  }\n  return new MaskedClass(nOpts);\n}\nIMask.createMask = createMask;\n\nexport { createMask as default, maskedClass, normalizeOpts };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by custom Function */\nclass MaskedFunction extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update({\n      ...opts,\n      validate: opts.mask\n    });\n  }\n}\nIMask.MaskedFunction = MaskedFunction;\n\nexport { MaskedFunction as default };\n","import { escapeRegExp, DIRECTION } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\nvar _MaskedNumber;\n/** Number mask */\nclass MaskedNumber extends Masked {\n  /** Single char */\n\n  /** Single char */\n\n  /** Array of single chars */\n\n  /** */\n\n  /** */\n\n  /** Digits after point */\n\n  /** Flag to remove leading and trailing zeros in the end of editing */\n\n  /** Flag to pad trailing zeros after point in the end of editing */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n  _updateRegExps() {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ? \"(\" + escapeRegExp(this.radix) + \"\\\\d{0,\" + this.scale + \"})?\" : '') + '$';\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(\"[\" + this.mapToRadix.map(escapeRegExp).join('') + \"]\", 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n  _removeThousandsSeparators(value) {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n  _insertThousandsSeparators(value) {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const [prepCh, details] = super.doPrepareChar(this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (\n    /*\n      radix should be mapped when\n      1) input is done from keyboard = flags.input && flags.raw\n      2) unmasked value is set = !flags.input && !flags.raw\n      and should not be mapped when\n      1) value is set = flags.input && !flags.raw\n      2) raw value is set = !flags.input && flags.raw\n    */\n    flags.input && flags.raw || !flags.input && !flags.raw) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch), flags);\n    if (ch && !prepCh) details.skip = true;\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n    return [prepCh, details];\n  }\n  _separatorsCount(to, extendOnSeparators) {\n    if (extendOnSeparators === void 0) {\n      extendOnSeparators = false;\n    }\n    let count = 0;\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n    return count;\n  }\n  _separatorsCountFromSlice(slice) {\n    if (slice === void 0) {\n      slice = this._value;\n    }\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n    const oldValue = this._value;\n    this._value += ch;\n    const num = this.number;\n    let accepted = !isNaN(num);\n    let skip = false;\n    if (accepted) {\n      let fixedNum;\n      if (this.min != null && this.min < 0 && this.number < this.min) fixedNum = this.min;\n      if (this.max != null && this.max > 0 && this.number > this.max) fixedNum = this.max;\n      if (fixedNum != null) {\n        if (this.autofix) {\n          this._value = this.format(fixedNum, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n          skip || (skip = oldValue === this._value && !flags.tail); // if not changed on tail it's still ok to proceed\n        } else {\n          accepted = false;\n        }\n      }\n      accepted && (accepted = Boolean(this._value.match(this._numberRegExp)));\n    }\n    let appendDetails;\n    if (!accepted) {\n      this._value = oldValue;\n      appendDetails = new ChangeDetails();\n    } else {\n      appendDetails = new ChangeDetails({\n        inserted: this._value.slice(oldValue.length),\n        rawInserted: skip ? '' : ch,\n        skip\n      });\n    }\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    return appendDetails;\n  }\n  _findSeparatorAround(pos) {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n    return -1;\n  }\n  _adjustRangeWithSeparators(from, to) {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n    });\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (!this.thousandsSeparator) return cursorPos;\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        {\n          const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n          if (separatorAtLeftPos >= 0) {\n            const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n            if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\n              return separatorAtLeftPos;\n            }\n          }\n          break;\n        }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        {\n          const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n          if (separatorAtRightPos >= 0) {\n            return separatorAtRightPos + this.thousandsSeparator.length;\n          }\n        }\n    }\n    return cursorPos;\n  }\n  doCommit() {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n      let formatted = this.value;\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n      this._value = formatted;\n    }\n    super.doCommit();\n  }\n  _normalizeZeros(value) {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n      if (!parts[1].length) parts.length = 1; // remove fractional\n    }\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n  _padFractionalZeros(value) {\n    if (!value) return value;\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (ch === this.radix || ch === MaskedNumber.UNMASKED_RADIX || this.mapToRadix.includes(ch));\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n  get unmaskedValue() {\n    return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.parse(this.unmaskedValue, this);\n  }\n  set typedValue(n) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number() {\n    return this.typedValue;\n  }\n  set number(number) {\n    this.typedValue = number;\n  }\n  get allowNegative() {\n    return this.min != null && this.min < 0 || this.max != null && this.max < 0;\n  }\n  get allowPositive() {\n    return this.min != null && this.min > 0 || this.max != null && this.max > 0;\n  }\n  typedValueEquals(value) {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (super.typedValueEquals(value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\n  }\n}\n_MaskedNumber = MaskedNumber;\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\nMaskedNumber.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  mask: Number,\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [_MaskedNumber.UNMASKED_RADIX],\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  scale: 2,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', {\n    useGrouping: false,\n    maximumFractionDigits: 20\n  })\n};\nIMask.MaskedNumber = MaskedNumber;\n\nexport { MaskedNumber as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport { DIRECTION } from '../core/utils.js';\nimport Masked from './base.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport PatternCursor from './pattern/cursor.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport PatternInputDefinition from './pattern/input-definition.js';\nimport './regexp.js';\nimport '../core/continuous-tail-details.js';\n\n/** Pattern mask */\nclass MaskedPattern extends Masked {\n  /** */\n\n  /** */\n\n  /** Single char for empty input */\n\n  /** Single char for filled input */\n\n  /** Show placeholder only when needed */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts == null ? void 0 : opts.definitions)\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n  _rebuildMask() {\n    const defs = this.definitions;\n    this._blocks = [];\n    this.exposeBlock = undefined;\n    this._stops = [];\n    this._maskedBlocks = {};\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n    for (let i = 0; i < pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const {\n            expose,\n            repeat,\n            ...bOpts\n          } = normalizeOpts(this.blocks[bName]); // TODO type Opts<Arg & Extra>\n          const blockOpts = {\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            autofix: this.autofix,\n            ...bOpts,\n            repeat,\n            parent: this\n          };\n          const maskedBlock = repeat != null ? new IMask.RepeatBlock(blockOpts /* TODO */) : createMask(blockOpts);\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n            if (expose) this.exposeBlock = maskedBlock;\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n          i += bName.length - 1;\n          continue;\n        }\n      }\n      let char = pattern[i];\n      let isInput = (char in defs);\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n      const def = isInput ? new PatternInputDefinition({\n        isOptional: optionalBlock,\n        lazy: this.lazy,\n        eager: this.eager,\n        placeholderChar: this.placeholderChar,\n        displayChar: this.displayChar,\n        ...normalizeOpts(defs[char]),\n        parent: this\n      }) : new PatternFixedDefinition({\n        char,\n        eager: this.eager,\n        isUnmasking: unmaskingBlock\n      });\n      this._blocks.push(def);\n    }\n  }\n  get state() {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state)\n    };\n  }\n  set state(state) {\n    if (!state) {\n      this.reset();\n      return;\n    }\n    const {\n      _blocks,\n      ...maskedState\n    } = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n  reset() {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n  get isComplete() {\n    return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every(b => b.isComplete);\n  }\n  get isFilled() {\n    return this._blocks.every(b => b.isFilled);\n  }\n  get isFixed() {\n    return this._blocks.every(b => b.isFixed);\n  }\n  get isOptional() {\n    return this._blocks.every(b => b.isOptional);\n  }\n  doCommit() {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n  get unmaskedValue() {\n    return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.unmaskedValue = unmaskedValue;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get value() {\n    return this.exposeBlock ? this.exposeBlock.value :\n    // TODO return _value when not in change?\n    this._blocks.reduce((str, b) => str += b.value, '');\n  }\n  set value(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.value = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.value = value;\n  }\n  get typedValue() {\n    return this.exposeBlock ? this.exposeBlock.typedValue : super.typedValue;\n  }\n  set typedValue(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.typedValue = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.typedValue = value;\n  }\n  get displayValue() {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n  appendTail(tail) {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n  _appendEager() {\n    var _this$_mapPosToBlock;\n    const details = new ChangeDetails();\n    let startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n    for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n      details.aggregate(d);\n    }\n    return details;\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const blockIter = this._mapPosToBlock(this.displayValue.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n    for (let bi = blockIter.index, block; block = this._blocks[bi]; ++bi) {\n      var _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n      chunkTail.extend(blockChunk);\n    });\n    return chunkTail;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (fromPos === toPos) return '';\n    let input = '';\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n    return input;\n  }\n  _findStopBefore(blockIndex) {\n    let stopBefore;\n    for (let si = 0; si < this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder(toBlockIndex) {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n    const startBlockIter = this._mapPosToBlock(this.displayValue.length);\n    if (!startBlockIter) return details;\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n    this._blocks.slice(startBlockIndex, endBlockIndex).forEach(b => {\n      if (!b.lazy || toBlockIndex != null) {\n        var _blocks2;\n        details.aggregate(b._appendPlaceholder((_blocks2 = b._blocks) == null ? void 0 : _blocks2.length));\n      }\n    });\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock(pos) {\n    let accVal = '';\n    for (let bi = 0; bi < this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n      accVal += block.displayValue;\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos\n        };\n      }\n    }\n  }\n  _blockStartPos(blockIndex) {\n    return this._blocks.slice(0, blockIndex).reduce((pos, b) => pos += b.displayValue.length, 0);\n  }\n  _forEachBlocksInRange(fromPos, toPos, fn) {\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].displayValue.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].displayValue.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.displayValue.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return 0;\n    }\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.displayValue.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock(name) {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks(name) {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    this._forEachBlocksInRange(0, this.displayValue.length, b => details.aggregate(b.pad(flags)));\n    return details;\n  }\n}\nMaskedPattern.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\nIMask.MaskedPattern = MaskedPattern;\n\nexport { MaskedPattern as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\nclass ChunksTailDetails {\n  /** */\n\n  constructor(chunks, from) {\n    if (chunks === void 0) {\n      chunks = [];\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.chunks = chunks;\n    this.from = from;\n  }\n  toString() {\n    return this.chunks.map(String).join('');\n  }\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    tailChunk = isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk;\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && (\n    // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n    // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift(); // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n  appendTo(masked) {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n    const details = new ChangeDetails();\n    for (let ci = 0; ci < this.chunks.length; ++ci) {\n      const chunk = this.chunks[ci];\n      const lastBlockIter = masked._mapPosToBlock(masked.displayValue.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null && (\n      // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails ||\n        // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        details.aggregate(tailDetails);\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n    return details;\n  }\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n  set state(state) {\n    const {\n      chunks,\n      ...props\n    } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n}\n\nexport { ChunksTailDetails as default };\n","import { DIRECTION } from '../../core/utils.js';\n\nclass PatternCursor {\n  constructor(masked, pos) {\n    this.masked = masked;\n    this._log = [];\n    const {\n      offset,\n      index\n    } = masked._mapPosToBlock(pos) || (pos < 0 ?\n    // first\n    {\n      index: 0,\n      offset: 0\n    } :\n    // last\n    {\n      index: this.masked._blocks.length,\n      offset: 0\n    });\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n  get block() {\n    return this.masked._blocks[this.index];\n  }\n  get pos() {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n  get state() {\n    return {\n      index: this.index,\n      offset: this.offset,\n      ok: this.ok\n    };\n  }\n  set state(s) {\n    Object.assign(this, s);\n  }\n  pushState() {\n    this._log.push(this.state);\n  }\n  popState() {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n  bindBlock() {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.displayValue.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n  _pushLeft(fn) {\n    this.pushState();\n    for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) == null ? void 0 : _this$block.displayValue.length) || 0) {\n      var _this$block;\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  _pushRight(fn) {\n    this.pushState();\n    for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  pushLeftBeforeFilled() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n  pushLeftBeforeInput() {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushLeftBeforeRequired() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushRightBeforeFilled() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n  pushRightBeforeInput() {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n  pushRightBeforeRequired() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n\nexport { PatternCursor as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\n\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    const details = new ChangeDetails({\n      inserted: this.char,\n      rawInserted: isResolved ? this.char : ''\n    });\n    this._value = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n  pad(flags) {\n    return this._appendPlaceholder();\n  }\n}\n\nexport { PatternFixedDefinition as default };\n","import createMask from '../factory.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION } from '../../core/utils.js';\nimport '../../core/holder.js';\n\nclass PatternInputDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    const {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager,\n      ...maskOpts\n    } = opts;\n    this.masked = createMask(maskOpts);\n    Object.assign(this, {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager\n    });\n  }\n  reset() {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n    return new ChangeDetails();\n  }\n  get value() {\n    return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\n  }\n  get unmaskedValue() {\n    return this.masked.unmaskedValue;\n  }\n  get rawInputValue() {\n    return this.masked.rawInputValue;\n  }\n  get displayValue() {\n    return this.masked.value && this.displayChar || this.value;\n  }\n  get isComplete() {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const state = this.masked.state;\n    // simulate input\n    let details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n    if (details.inserted && this.doValidate(flags) === false) {\n      details = new ChangeDetails();\n      this.masked.state = state;\n    }\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n    return details;\n  }\n  append(str, flags, tail) {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n  _appendPlaceholder() {\n    if (this.isFilled || this.isOptional) return new ChangeDetails();\n    this.isFilled = true;\n    return new ChangeDetails({\n      inserted: this.placeholderChar\n    });\n  }\n  _appendEager() {\n    return new ChangeDetails();\n  }\n  extractTail(fromPos, toPos) {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n  appendTail(tail) {\n    return this.masked.appendTail(tail);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default:\n        return boundPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.value.slice(fromPos, toPos).length;\n  }\n  doValidate(flags) {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n  doCommit() {\n    this.masked.doCommit();\n  }\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled\n    };\n  }\n  set state(state) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta;\n    return {\n      ...flags,\n      _beforeTailState: (flags == null || (_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.masked) || (flags == null ? void 0 : flags._beforeTailState)\n    };\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nPatternInputDefinition.DEFAULT_DEFINITIONS = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\nexport { PatternInputDefinition as default };\n","import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which accepts ranges */\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n\n  /** Min bound */\n\n  /** Max bound */\n\n  get _matchFrom() {\n    return this.maxLength - String(this.from).length;\n  }\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      to = this.to || 0,\n      from = this.from || 0,\n      maxLength = this.maxLength || 0,\n      autofix = this.autofix,\n      ...patternOpts\n    } = opts;\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n    super._update(patternOpts);\n  }\n  get isComplete() {\n    return super.isComplete && Boolean(this.value);\n  }\n  boundaries(str) {\n    let minstr = '';\n    let maxstr = '';\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n    return [minstr, maxstr];\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let details;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n    if (!ch) details.skip = !this.isComplete;\n    return [ch, details];\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (!this.autofix || this.value.length + 1 > this.maxLength) return super._appendCharRaw(ch, flags);\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    const [minstr, maxstr] = this.boundaries(this.value + ch);\n    if (Number(maxstr) < this.from) return super._appendCharRaw(fromStr[this.value.length], flags);\n    if (Number(minstr) > this.to) {\n      if (!flags.tail && this.autofix === 'pad' && this.value.length + 1 < this.maxLength) {\n        return super._appendCharRaw(fromStr[this.value.length], flags).aggregate(this._appendCharRaw(ch, flags));\n      }\n      return super._appendCharRaw(toStr[this.value.length], flags);\n    }\n    return super._appendCharRaw(ch, flags);\n  }\n  doValidate(flags) {\n    const str = this.value;\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n    const [minstr, maxstr] = this.boundaries(str);\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to && super.doValidate(flags);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    if (this.value.length === this.maxLength) return details;\n    const value = this.value;\n    const padLength = this.maxLength - this.value.length;\n    if (padLength) {\n      this.reset();\n      for (let i = 0; i < padLength; ++i) {\n        details.aggregate(super._appendCharRaw('0', flags));\n      }\n\n      // append tail\n      value.split('').forEach(ch => this._appendCharRaw(ch));\n    }\n    return details;\n  }\n}\nIMask.MaskedRange = MaskedRange;\n\nexport { MaskedRange as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const mask = opts.mask;\n    if (mask) opts.validate = value => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\n\nexport { MaskedRegExp as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern mask */\nclass RepeatBlock extends MaskedPattern {\n  get repeatFrom() {\n    var _ref;\n    return (_ref = Array.isArray(this.repeat) ? this.repeat[0] : this.repeat === Infinity ? 0 : this.repeat) != null ? _ref : 0;\n  }\n  get repeatTo() {\n    var _ref2;\n    return (_ref2 = Array.isArray(this.repeat) ? this.repeat[1] : this.repeat) != null ? _ref2 : Infinity;\n  }\n  constructor(opts) {\n    super(opts);\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    var _ref3, _ref4, _this$_blocks;\n    const {\n      repeat,\n      ...blockOpts\n    } = normalizeOpts(opts); // TODO type\n    this._blockOpts = Object.assign({}, this._blockOpts, blockOpts);\n    const block = createMask(this._blockOpts);\n    this.repeat = (_ref3 = (_ref4 = repeat != null ? repeat : block.repeat) != null ? _ref4 : this.repeat) != null ? _ref3 : Infinity; // TODO type\n\n    super._update({\n      mask: 'm'.repeat(Math.max(this.repeatTo === Infinity && ((_this$_blocks = this._blocks) == null ? void 0 : _this$_blocks.length) || 0, this.repeatFrom)),\n      blocks: {\n        m: block\n      },\n      eager: block.eager,\n      overwrite: block.overwrite,\n      skipInvalid: block.skipInvalid,\n      lazy: block.lazy,\n      placeholderChar: block.placeholderChar,\n      displayChar: block.displayChar\n    });\n  }\n  _allocateBlock(bi) {\n    if (bi < this._blocks.length) return this._blocks[bi];\n    if (this.repeatTo === Infinity || this._blocks.length < this.repeatTo) {\n      this._blocks.push(createMask(this._blockOpts));\n      this.mask += 'm';\n      return this._blocks[this._blocks.length - 1];\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    for (let bi = (_this$_mapPosToBlock$ = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index) != null ? _this$_mapPosToBlock$ : Math.max(this._blocks.length - 1, 0), block, allocated;\n    // try to get a block or\n    // try to allocate a new block if not allocated already\n    block = (_this$_blocks$bi = this._blocks[bi]) != null ? _this$_blocks$bi : allocated = !allocated && this._allocateBlock(bi); ++bi) {\n      var _this$_mapPosToBlock$, _this$_mapPosToBlock, _this$_blocks$bi, _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      if (blockDetails.skip && allocated) {\n        // remove the last allocated block and break\n        this._blocks.pop();\n        this.mask = this.mask.slice(1);\n        break;\n      }\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  _trimEmptyTail(fromPos, toPos) {\n    var _this$_mapPosToBlock2, _this$_mapPosToBlock3;\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    const firstBlockIndex = Math.max(((_this$_mapPosToBlock2 = this._mapPosToBlock(fromPos)) == null ? void 0 : _this$_mapPosToBlock2.index) || 0, this.repeatFrom, 0);\n    let lastBlockIndex;\n    if (toPos != null) lastBlockIndex = (_this$_mapPosToBlock3 = this._mapPosToBlock(toPos)) == null ? void 0 : _this$_mapPosToBlock3.index;\n    if (lastBlockIndex == null) lastBlockIndex = this._blocks.length - 1;\n    let removeCount = 0;\n    for (let blockIndex = lastBlockIndex; firstBlockIndex <= blockIndex; --blockIndex, ++removeCount) {\n      if (this._blocks[blockIndex].unmaskedValue) break;\n    }\n    if (removeCount) {\n      this._blocks.splice(lastBlockIndex - removeCount + 1, removeCount);\n      this.mask = this.mask.slice(removeCount);\n    }\n  }\n  reset() {\n    super.reset();\n    this._trimEmptyTail();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._trimEmptyTail(fromPos, toPos);\n    return removeDetails;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos == null && this.repeatTo === Infinity) return Infinity;\n    return super.totalInputPositions(fromPos, toPos);\n  }\n  get state() {\n    return super.state;\n  }\n  set state(state) {\n    this._blocks.length = state._blocks.length;\n    this.mask = this.mask.slice(0, this._blocks.length);\n    super.state = state;\n  }\n}\nIMask.RepeatBlock = RepeatBlock;\n\nexport { RepeatBlock as default };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import IMask from 'imask';\r\nimport map from './map.js'\r\n\r\n// грузим карту\r\nmap();\r\n\r\n// input\r\n\r\nconst inputs = document.querySelectorAll('.search-input')\r\n\r\ninputs.forEach(item => {\r\n    item.addEventListener('focus', (e) => {\r\n        e.target.parentNode.classList.toggle('focus');\r\n    })\r\n\r\n    item.addEventListener('blur', (e) => {\r\n        e.target.parentNode.classList.toggle('focus');\r\n    })\r\n})\r\n\r\n// dropdown menu pc\r\n\r\nconst dropdowns = document.querySelectorAll('.menu__dropdown');\r\n\r\nfunction dropdownMenu() {\r\n    if (document.body.clientWidth > 1500) {\r\n        dropdowns.forEach((item) => {\r\n            const navLink = item.querySelector('.nav-link');\r\n\r\n            item.addEventListener('mouseover', (e) => {\r\n                if (e.target.classList.contains('nav-link')) {\r\n                    item.querySelector('.dropdown-menu').classList.add('active');\r\n                    navLink.querySelector('.menu__arrow-dropdown').classList.add('active');\r\n                }\r\n            })\r\n\r\n            item.addEventListener('mouseleave', () => {\r\n                item.querySelector('.dropdown-menu').classList.remove('active');\r\n                navLink.querySelector('.menu__arrow-dropdown').classList.remove('active');\r\n            })\r\n        })\r\n    } else {\r\n        dropdowns.forEach((item, index) => {\r\n            item.addEventListener('click', () => {\r\n                if (!item.classList.contains('.uslugi__item')) {\r\n                    dropdowns.forEach((elem, idx) => {\r\n                        if (idx !== index) {\r\n                            elem.classList.remove('active')\r\n                            elem.querySelector('.nav-link').classList.remove('active');\r\n                            elem.querySelector('.dropdown-menu').classList.remove('active');\r\n                            elem.querySelector(\".menu__arrow-dropdown\").classList.remove('active')\r\n                        }\r\n                    });\r\n                }\r\n\r\n                item.classList.toggle('active');\r\n                item.querySelector('.nav-link').classList.toggle('active');\r\n                item.querySelector('.dropdown-menu').classList.toggle('active');\r\n            })\r\n        })\r\n\r\n        const uslugi = document.querySelectorAll('.item-uslugi__title');\r\n        uslugi.forEach((item) => {\r\n            item.addEventListener('click', (e) => {\r\n                document.querySelector('.mobile__sub-menu').classList.toggle('active')\r\n                document.querySelector('.navbar-collapse').classList.add('overflow-hidden')\r\n\r\n                configScreen(item);\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            })\r\n        })\r\n\r\n        const links = document.querySelectorAll(\".nav-link\")\r\n        links.forEach(item => {\r\n            if (item.querySelector(\".menu__arrow-dropdown\")) {\r\n                item.addEventListener('click', (e) => {\r\n                    item.querySelector(\".menu__arrow-dropdown\").classList.toggle('active')\r\n\r\n                    if (e.target.nodeName !== \"SPAN\") {\r\n                        e.preventDefault();\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\ndropdownMenu();\r\n\r\nwindow.onresize = () => {\r\n    dropdownMenu();\r\n};\r\n\r\nfunction configScreen(item) {\r\n    const children = item.parentNode.children;\r\n    const ul = document.querySelector('.sub-list.uslugi-mobile')\r\n    ul.innerHTML = '';\r\n\r\n    document.querySelector('.menu-social p').innerHTML = children[0].querySelector(\"span\").innerHTML;\r\n    let count = 1;\r\n\r\n    while (count < children.length - 1) {\r\n        const li = document.createElement('li');\r\n        li.classList.add('sub-list__item');\r\n        li.classList.add('tab');\r\n\r\n        if (children[count + 1].nodeName === 'UL' && children[count].nodeName === 'A') {\r\n            let lis = '';\r\n\r\n            children[count + 1].querySelectorAll(':scope > li').forEach(item => {\r\n                if (!item.querySelector('ul')) {\r\n                    lis += `<li class=\"sub-list__item\"><a class=\"dropdown-item py-3 px-4\" href=\"#\">${item.querySelector('a').innerHTML}</a></li>`\r\n                } else {\r\n                    let temp;\r\n                    const deep_li = item.querySelectorAll('li')\r\n\r\n                    deep_li.forEach(elem => {\r\n                        temp = `<li class=\"sub-list__item deep-list me-3 w-100\"><a class=\"dropdown-item py-3 px-4\" href=\"#\">${elem.querySelector('a').innerHTML}</a></li>`\r\n                    })\r\n\r\n                    lis += `\r\n                        <a class=\"nested-dropdown align-items-center d-flex tab-title nav-link gap-3 py-3 px-4 sub-list__link justify-content-between\" href=\"#\" role=\"button\">\r\n                            <span>${item.querySelector('a').innerHTML}</span>\r\n                            <svg class=\"menu__arrow-dropdown\">\r\n                                <use href=\"./img/svg/sprite.svg#menu_arrow\"></use>\r\n                            </svg>\r\n                        </a>\r\n\r\n                        <ul class=\"dropdown-menu header__dropdown default-dropdown right list tab-list p-0 gap-2 deep-ul d-block overflow-hidden mb-0\" aria-labelledby=\"menu3\">\r\n                           ${temp}\r\n                        </ul>\r\n                    `\r\n                }\r\n            })\r\n\r\n            li.insertAdjacentHTML('beforeend', `\r\n                <a class=\"align-items-center d-flex tab-title nav-link gap-3 py-3 px-4 sub-list__link justify-content-between\" href=\"#\" role=\"button\">\r\n\t\t\t\t\t<span>${children[count].innerHTML}</span>\r\n\t\t\t\t\t<svg class=\"menu__arrow-dropdown\">\r\n\t\t\t\t\t\t<use href=\"./img/svg/sprite.svg#menu_arrow\"></use>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</a>\r\n\r\n\t\t\t\t<ul class=\"dropdown-menu header__dropdown default-dropdown right gap-2 list tab-list p-0 mb-0\" aria-labelledby=\"menu3\">\r\n                    ${lis}\r\n\t\t\t\t</ul>\r\n            `)\r\n\r\n            count += 2;\r\n        } else {\r\n            li.insertAdjacentHTML('beforeend', `\r\n                <a class=\"align-items-center d-flex nav-link\" href=\"${children[count].href}\" role=\"button\">\r\n\t\t\t\t\t${children[count].innerHTML}\r\n\t\t\t\t</a>`)\r\n            count++;\r\n        }\r\n\r\n        ul.append(li)\r\n    }\r\n\r\n    const links = document.querySelectorAll(\".nav-link\")\r\n    links.forEach(item => {\r\n        if (item.querySelector(\".menu__arrow-dropdown\")) {\r\n            item.addEventListener('click', (e) => {\r\n                if (e.target.nodeName !== \"SPAN\") {\r\n                    e.preventDefault();\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    const sublist = document.querySelectorAll('.sub-list__link')\r\n\r\n    sublist.forEach((item, i) => {\r\n        item.addEventListener('click', (e) => {\r\n            sublist.forEach((elem, idx) => {\r\n                if (i !== idx && elem.nextElementSibling !== item.parentNode) {\r\n                    elem.classList.remove('active');\r\n                    const dropdown = elem.parentNode.querySelector('.default-dropdown');\r\n                    dropdown.classList.remove('active');\r\n                    dropdown.style.maxHeight = 0;\r\n                }\r\n            })\r\n\r\n            if (!item.classList.contains('active')) {\r\n                item.parentNode.querySelector('.default-dropdown').style.maxHeight = Array.from(ul.querySelectorAll('.default-dropdown li')).reduce((acc, item) => acc += item.clientHeight, 0) + 10 + 'px'\r\n            } else {\r\n                item.parentNode.querySelector('.default-dropdown').style.maxHeight = 0\r\n            }\r\n\r\n            item.classList.toggle('active');\r\n            item.parentNode.querySelector('.default-dropdown').classList.toggle('active')\r\n        })\r\n    })\r\n}\r\n\r\ndocument.querySelector('.sub-menu__arrow-dropdown').addEventListener('click', () => {\r\n    document.querySelector('.mobile__sub-menu').classList.remove('active')\r\n    document.querySelector('.navbar-collapse').classList.remove('overflow-hidden')\r\n})\r\n\r\n// burger large screens\r\nconst burger = document.querySelector('.burger');\r\nconst menu = document.querySelector('.header__menu');\r\nconst background = document.querySelector('.background-mobile');\r\nconst cross = document.querySelectorAll('.cross')\r\n\r\nfunction isBurgerOpen() {\r\n    return burger.classList.contains('active');\r\n}\r\n\r\nfunction changeMenu() {\r\n    burger.classList.remove('active');\r\n    menu.classList.remove('active');\r\n    background.classList.remove('active');\r\n\r\n    burger.classList.add('hide');\r\n    menu.classList.add('hide');\r\n    background.classList.add('hide');\r\n\r\n    setTimeout(() => {\r\n        burger.classList.remove('hide');\r\n        menu.classList.remove('hide');\r\n        background.classList.remove('hide');\r\n    }, 300)\r\n\r\n    dropdowns.forEach(item => {\r\n        item.classList.remove('active');\r\n        item.querySelector('.nav-link').classList.remove('active');\r\n        item.querySelector('.dropdown-menu').classList.remove('active');\r\n\r\n        setTimeout(() => {\r\n            document.querySelector('.mobile__sub-menu').classList.remove('active')\r\n            document.querySelector('.navbar-collapse').classList.remove('overflow-hidden')\r\n        }, 300)\r\n    })\r\n}\r\n\r\nburger.addEventListener('click', () => {\r\n    if (!isBurgerOpen) {\r\n        document.body.classList.remove('overflow-hidden')\r\n    } else {\r\n        burger.classList.add('active');\r\n        menu.classList.add('active');\r\n        background.classList.add('active');\r\n        document.body.classList.add('overflow-hidden')\r\n\r\n        dropdowns.forEach((item) => {\r\n            item.classList.remove('active')\r\n            item.querySelector('.nav-link').classList.remove('active');\r\n            item.querySelector('.dropdown-menu').classList.remove('active');\r\n            item.querySelector(\".menu__arrow-dropdown\").classList.remove('active')\r\n        })\r\n    }\r\n})\r\n\r\ncross.forEach(item => {\r\n    item.addEventListener('click', () => {\r\n        if (isBurgerOpen) {\r\n            document.body.classList.remove('overflow-hidden')\r\n            changeMenu();\r\n        } else {\r\n            burger.classList.add('active');\r\n            menu.classList.add('active');\r\n            background.classList.add('active');\r\n            document.body.classList.add('overflow-hidden')\r\n        }\r\n    })\r\n})\r\n\r\nbackground.addEventListener('click', () => {\r\n    if (isBurgerOpen) {\r\n        document.body.classList.remove('overflow-hidden')\r\n        changeMenu();\r\n    } else {\r\n        burger.classList.add('active');\r\n        menu.classList.add('active');\r\n        background.classList.add('active');\r\n    }\r\n})\r\n\r\n// main\r\n\r\nfunction detecDevice() {\r\n    if (navigator.userAgent.match(/Android/i)\r\n        || navigator.userAgent.match(/webOS/i)\r\n        || navigator.userAgent.match(/iPhone/i)\r\n        || navigator.userAgent.match(/iPad/i)\r\n        || navigator.userAgent.match(/iPod/i)\r\n        || navigator.userAgent.match(/BlackBerry/i)\r\n        || navigator.userAgent.match(/Windows Phone/i)) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nconst isMobile = detecDevice();\r\n\r\nif (isMobile) {\r\n    document.querySelectorAll('.add-scroll').forEach(item => {\r\n        item.classList.add('xs-x-scroll')\r\n    })\r\n}\r\n\r\n// tabs\r\n\r\nconst tabsServices = document.querySelectorAll('.tabs-services > .tab')\r\n\r\ntabsServices.forEach((tab, index) => {\r\n    tab.addEventListener('click', () => {\r\n        tabsServices.forEach((item, idx) => {\r\n            if (index !== idx) {\r\n                item.classList.remove('active')\r\n                item.querySelector('.tab-title').classList.remove('active')\r\n                item.querySelector('.tab-list p-0').classList.remove('active');\r\n            }\r\n        })\r\n\r\n        tab.classList.toggle('active')\r\n        tab.querySelector('.tab-title').classList.toggle('active')\r\n        tab.querySelector('.tab-list p-0').classList.toggle('active');\r\n    })\r\n})\r\n\r\n\r\nif (matchMedia('only screen and (min-width: 991px)').matches) {\r\n    // arrow\r\n\r\n    const arrow = document.querySelector('.arrow-wrapper');\r\n    const height = document.documentElement.clientHeight;\r\n\r\n    if (window.scrollY < height * 2) {\r\n        arrow.classList.add('hidden')\r\n    } else {\r\n        arrow.classList.remove('hidden')\r\n    }\r\n\r\n    window.addEventListener('scroll', e => {\r\n        if (window.scrollY < height * 2) {\r\n            arrow.classList.add('hidden')\r\n        } else {\r\n            arrow.classList.remove('hidden')\r\n        }\r\n    })\r\n\r\n    // phone input\r\n    let elements = document.querySelectorAll('#phone');\r\n\r\n    let maskOptions = {\r\n        mask: '+7 - 000 - 000 - 00 - 00',\r\n        lazy: false\r\n    }\r\n\r\n    let telephoneMasks = []\r\n\r\n    elements.forEach(element => {\r\n        let mask = new IMask(element, maskOptions);\r\n        telephoneMasks.push(mask);\r\n    })\r\n\r\n    let elements2 = document.querySelectorAll('#email');\r\n\r\n    let maskOptions2 = {\r\n        mask: function (value) {\r\n            if (/^[a-z0-9_\\.-]+$/.test(value))\r\n                return true;\r\n            if (/^[a-z0-9_\\.-]+@$/.test(value))\r\n                return true;\r\n            if (/^[a-z0-9_\\.-]+@[a-z0-9-]+$/.test(value))\r\n                return true;\r\n            if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.$/.test(value))\r\n                return true;\r\n            if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.[a-z]{1,4}$/.test(value))\r\n                return true;\r\n            if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.[a-z]{1,4}\\.$/.test(value))\r\n                return true;\r\n            if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.[a-z]{1,4}\\.[a-z]{1,4}$/.test(value))\r\n                return true;\r\n            return false;\r\n        },\r\n        lazy: false\r\n    }\r\n\r\n    let emailMasks = []\r\n\r\n    elements2.forEach(element2 => {\r\n        let mask2 = new IMask(element2, maskOptions2);\r\n        emailMasks.push(mask2);\r\n    })\r\n}\r\n\r\nconst yandexMap = document.querySelectorAll('.map-disable')\r\n\r\nyandexMap.forEach(item => {\r\n    item.addEventListener('click', () => {\r\n        item.classList.add('active')\r\n    })\r\n})\r\n\r\n// calc results\r\n\r\nfunction isInViewport(element) {\r\n    let rect = element.getBoundingClientRect();\r\n    return (\r\n        rect.bottom >= 0 &&\r\n        rect.right >= 0 &&\r\n        rect.top <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n        rect.left <= (window.innerWidth || document.documentElement.clientWidth)\r\n    );\r\n}\r\n\r\nconst resultsCalc = document.querySelector('.results-wrap.d-md-flex')\r\nconst resultsFixed = document.querySelector('.results-block');\r\nconst footer = document.querySelector('footer');\r\n\r\nconst toggleResults = () => {\r\n    console.log(isInViewport(resultsCalc), isInViewport(footer))\r\n    if (!resultsCalc) {\r\n        if (isInViewport(footer)) {\r\n            resultsFixed.classList.add('hide')\r\n        } else {\r\n            resultsFixed.classList.remove('hide')\r\n        }\r\n    } else {\r\n        if (isInViewport(resultsCalc) || isInViewport(footer)) {\r\n            resultsFixed.classList.add('hide')\r\n        } else {\r\n            resultsFixed.classList.remove('hide')\r\n        }\r\n    }\r\n}\r\n\r\nwindow.addEventListener('scroll', () => {\r\n    toggleResults();\r\n})"],"names":["map","window","location","pathname","loadMap","document","querySelector","mapDots","coords","position","text","size","forEach","dot","insertAdjacentHTML","lastElem","querySelectorAll","length","style","top","left","dataset","personalDot","width","height","dotText","innerHTML","bottom","mainDot","mainDotBorder","i","interval","setInterval","el","elem","classList","remove","dotBorder","parentElement","add","animation","elem1","idx","dotBorder1","dotWrapper","wrap","addEventListener","clearInterval","animationDelay","delay","IMask","inputs","item","e","target","parentNode","toggle","dropdowns","dropdownMenu","body","clientWidth","navLink","contains","index","uslugi","configScreen","stopPropagation","preventDefault","links","nodeName","onresize","children","ul","count","li","createElement","lis","temp","deep_li","href","append","sublist","nextElementSibling","dropdown","maxHeight","Array","from","reduce","acc","clientHeight","burger","menu","background","cross","isBurgerOpen","changeMenu","setTimeout","detecDevice","navigator","userAgent","match","isMobile","tabsServices","tab","matchMedia","matches","arrow","documentElement","scrollY","elements","maskOptions","mask","lazy","telephoneMasks","element","push","elements2","maskOptions2","value","test","emailMasks","element2","mask2","yandexMap","isInViewport","rect","getBoundingClientRect","right","innerHeight","innerWidth","resultsCalc","resultsFixed","footer","toggleResults","console","log"],"sourceRoot":""}